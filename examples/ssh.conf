
CrayonizerDir /usr/prebin

entry ssh
{
#if input or output is not a tty then don't crayonize
if "notatty(stdin)" dontcrayon
if "notatty(stdout)" dontcrayon

#pass all input to the crayonized program
passinput

cmdline-sub "\-X -p \+X\D*" "-oPort=$(match)"
cmdline-sub "\-X -i \+X\D*" "-oIdentityFile=$(match)"

#clip destination address from the command line and set the environment variable
#'SSH_DEST' first try dests without a @
cmdline " \A*" 
{
	setenv SSH_DEST 
	setenv SSH_COLOR=red
}

if "'$(SSH_DEST)' = *home" setenv SSH_COLOR=green
if "'$(SSH_DEST)' = *@192.168.2.1*" setenv SSH_COLOR=green
if "'$(SSH_DEST)' = *cloud*" setenv SSH_COLOR=gold

#set x title bar to SSH_DEST and background color and foreground color
prepend "SSH $(SSH_DEST)" 
{
#hide
setxtitle
if "$(SSH_COLOR) = green" bgcolor #004020 fgcolor white 
if "$(SSH_COLOR) = red" bgcolor #600030 fgcolor white 
if "$(SSH_COLOR) = blue" bgcolor #302060 fgcolor white 
if "$(SSH_COLOR) = gold" bgcolor #303000 fgcolor white 
}

#prepend "SSH $(SSH_DEST)" hide blue setxtitle bgcolor #600030 fgcolor white #clearscreen

if "termtype" playsound /usr/share/sounds/lmarbles/teleport.wav

#if we get a zmodem start string, then pass program output to rz
string "\*\*?B00000000000000\r" hide passto "/usr/bin/lrz -v -v " send "\r"
#string "\d" replace "\b"

#if we get keypress ctrl-a, pass control to sz *
#keypress win querybar "file list:" FileList

keypress win
{
querybar yellow/blue "file list:" FileList
send "lrz\r" 
passto "/usr/bin/lsz -v -v $(FileList)"

#querybar "LOCAL CMD:" command
#exec $(command)
}

line "ssh: connect to host *: Network is unreachable" red
line "Permission denied" red

#restore xtitle and colors. 'restorextitle' only works in aterm, so
#it's probably better to set it to some standard value
append "" restorextitle
append "" bgcolor black
append "" fgcolor white
}
