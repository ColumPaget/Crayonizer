#Example crayonizer config file with entries for some common programs

#must include a line that says where the crayonizer executable and
#program symbolic links live, otherwise it can try to crayonize itself,
#itself, itself, itself, itself, itself... you get the picture
CrayonizerDir /usr/prebin


entry cat /proc/cpuinfo
{
string processor*:*\D\-X bold cyan caps
string yes cyan
string no blue

#\-C turns off case, so these matches are case-insensitive
string \-Cgenuine|\-Cauthentic green
string \-C(R)|\-C(C) red
string \-CIntel|\-CAMD|\-CCyrix|\-CVia bold
string mmx|sse|sse2 caps bold green
string "\-Xbogomips*:*\+X\D*\-X\S" inverse magenta
string "bogomips*:\S" magenta
string "\-Xcpu MHz*:*\+X\D*\-X\S" bold inverse yellow
string "cpu MHz*:\S" bold yellow
string " \D*MHz" bold yellow
string "cache size*:\S" green
string "\-Xcache size*:*\+X\D*\-X\n" bold inverse green
string ^*_bug red
string "*_bug* yes" red caps bold
}

entry ifconfig
{
prepend "NETWORK INTERFACES" cyan bold setxtitle
string "MTU:*\-X " inverse red
string "\-Cup|\-Crunning" bold green
string "Ethernet|BROADCAST|MULTICAST" blue 
string "Local Loopback|LOOPBACK|NOTRAILERS" magenta
string "\UX \A*:" yellow
string "\X\X:\X\X:\X\X:\X\X:\X\X:\X\X" cyan
string "\D*.\D*.\D*.\D*\S" cyan bold
string "^\A*\-X " bold cyan underline
}

entry ping
{
line "PING|round|statistics|transmitted" yellow/blue bold clrtoeol
lineno > 0 clrtoeol
string " \D*.\D*.\D*.\D*:\S" magenta
value "\-Xtime=\+X\D* " >0 green >10 yellow >30 red 
value " \D% packet loss" =0 green >0 yellow
value " \D% packet loss" >0 yellow
value " \D\D% packet loss" >10 red >30 red bold
string " 100% packet loss" red bold inverse
string  "Destination Host Unreachable" red bold inverse
append ""
}


entry free
{
lineno 0 white/blue
string "\D*\S" yellow
}

# example of crayonizing stdin
# use with 'cat /etc/hosts | crayonizer -stdin hosts'
entry hosts
{
string "\D*.\D*.\D*.\D*\S" cyan bold
line "^#" bold blue
}


entry xgcc|xg++
{
args -w
line ' version ' bold magenta
#line ' error: *' red
#line ' undefined reference to ' red
#line ' warning: ' yellow
#line ' note: ' cyan
#string '^\A*:' bold
string "\-XTarget: *\+X*\-X\S" bold inverse yellow
}

entry make
{
passinput

if "larg(menuconfig)" dontcrayon
line ' version ' bold magenta
line ' error: ' red
line ' undefined reference to ' red
line ' Entering directory | Leaving directory' green
line ' warning: ' yellow
line ' note: ' cyan
string '^\A*:' bold
string '^gcc|^g++|^ld' magenta bold
mapto '-D*\S' cyan magenta yellow green 
string "\-XTarget: *\+X*\-X\S" bold inverse yellow
string "-o * " magenta bold
string "-o\B* " magenta bold
append "" 
{
if "duration: >10" playsound /usr/share/sounds/lmarbles/teleport.wav
}
}


entry dmesg
{
string ^*: bold white
string ^ACPI: bold yellow
string ^i2c*: bold cyan
string ^usb*: bold green
string ^scsi*: bold magenta
string ^\-Cpci*: bold blue
line "Adding * swap" magenta
line "\-Cconflict|\-Csegfault|\-Cunable|\-Cerror|\-CInitialized|\-Ccannot" red
string "\-Cdeprecated" red 
string "\-Cauthenticated|\-Cassociated" caps green
line "\-CInitialized|\-Cdetected|\-cenabled" green
line "Possible SYN flooding" blue
string "Out of memory" yellow/red
}

entry netstat
{
line "^Active*" bold
string LISTEN*\S yellow
string ESTABLISHED|CONNECTED green
string TIME_WAIT red
string "\D*.\D*.\D*.\D*:" cyan bold
string "\-X:\+X\D*\ " magenta bold
string "tcp" magenta caps
string "udp" yellow caps
string "^unix" green 
string "DGRAM" magenta 
string "STREAM" blue
}

entry nmap
{
line "^Nmap scan report for" bold
line "^PORT|^MAC" bold cyan
string "\-XHost is \+Xup" caps green
string open red caps bold
string filtered green
string closed yellow
string '\D*.\D*.\D*.\D*$' cyan
}

entry ps
{
if "arg(V)" dontcrayon
if "larg(help)" dontcrayon
line ERROR red dontcrayon
lineno 0 white/cyan clrtoeol
lineno 0 
{
	if "arg(v)" yellow/red clrtoeol
}


#lineno %2 white/darkgrey
linemapto mplayer|syswatch|links|opera|ClipMeister bold yellow green cyan red magenta
string root red
string colum\S cyan
string \[*\] blue
string 0:00 blue
string "\-X^{15|?}\+XZ\-X " red inverse
value "\-X^{20|?} *\+X\D*\-X " >0 yellow >5 red


lineno >=0 clrtoeol
lineno >0
{
section 15-20 R red
section 15-20 S yellow
section 15-20 s magenta
section 15-20 < red bold
section 15-20 D red bold
section 15-20 N green bold
section 15-20 l cyan
section 15-20 + lightred
}

#append "Flags:  R:Running  S: Sleeping   s:Session leader   L:Locked in memory  T:Stopped  D:ongoing IO  l:Multithreaded  +:In forground  <:High priority  N:Low priority  Z:z0mBie!" white/cyan clrtoeol
#append ""

}

entry top
{
passinput
stripansi
expectlines

lineno <6
{
string "^\A*:" bold cyan 
string "\D\D:\D\D:\D\D\-X up" white/blue 
string "total|used|free|running|sleeping|stopped|zombie|buffers|cached" magenta
value " \D*%" <1 blue >1 green >30 yellow >80 red
value " \D*%id" <30 red >=30 yellow >80 green
#string "^*\D \A" inverse 
string "^\A* \A* \A* 20" green
}

lineno 6 yellow/blue
lineno >6
{
	string " R " red
	string " S " green
	string " D " cyan
	string " Z " blue
	section 5-15 
	{
	mapto " * " green yellow magenta cyan 
	string root red
	}

	section 15-20
	{
	value " \D* " <20 red =20 blue >20 green
	string RT red
	}

	section 40-46
	{
	value " \D* " =0 blue >0 green >10 yellow >20 magenta >40 red
	}

	section 45-51
	{
	value " \D* " =0 blue >0 green >10 yellow >20 magenta >40 red
	}
}
}

entry tcpdump
{
	string "\-X: \+XS " green
	string "\-X: \+XP " blue
	string "\-X: \+XF " red
	string "\-X: \+XR " red bold
	mapto "\-X IP\+X *:" red green yellow magenta cyan white "black/red" "black/white" "blue bold"
}

entry ls
{
	string "\-X^{30|?}\+X* " red
}

entry tar
{
if "notatty(stdout)" dontcrayon
if "notatty(stdin)" dontcrayon
if "arg(c)"
{
append "Should you have used --dereference?" red bold
}
}

entry stats
{
exec "TEMP=`cat /sys/class/hwmon/hwmon0/device/temp2_label /sys/class/hwmon/hwmon0/device/temp2_input`; echo \"TEMP: $(TEMP)""
exec "TEMP=`cat /sys/class/hwmon/hwmon0/device/temp3_label /sys/class/hwmon/hwmon0/device/temp3_input`; echo \"TEMP: $(TEMP)""
}



entry ssh
{
#if input or output is not a tty then don't crayonize
if "notatty(stdin)" dontcrayon
if "notatty(stdout)" dontcrayon

#pass all input to the crayonized program
passinput

#clip destination address from the command line and set the environment variable
#'SSH_DEST'
cmdline " \A*@*" setenv SSH_DEST

#set x title bar to SSH_DEST and background color and foreground color
prepend "SSH $(SSH_DEST)" hide blue setxtitle bgcolor #600030 fgcolor white #clearscreen

if "termtype" playsound /usr/share/sounds/lmarbles/teleport.wav

#if we get a zmodem start string, then pass program output to rz
string "\*\*?B00000000000000\r" hide passto "/usr/bin/lrz -v " send "\r"

#if we get keypress ctrl-a, pass control to sz *
keypress ctrl-a send "lrz\r" passto "/usr/bin/lsz -v *"

line "ssh: connect to host *: Network is unreachable" red
line "Permission denied" red

#restore xtitle and colors. 'restorextitle' only works in aterm, so
#it's probably better to set it to some standard value
append "" restorextitle
append "" bgcolor black
append "" fgcolor white
}

entry cd
{
append "$(USER)@$(PWD)" setxtitle hide
}

entry mplayer
{
passinput

prepend "" setenv DEV=/dev/dsp
if "exists(/dev/dsp1)" setenv DEV=/dev/dsp1 
prepend "" args " -ao oss:$(DEV) "
prepend "" altscreen

#string "\-XPlaying \+X*" setxtitle
line "Playing " bold cyan basename setxtitle


line "VIDEO:|AUDIO" green 
line "^Selected" yellow 
line "^Could not" red

line "^=|Clip info:|major_brand:|minor_version:|compatible_brands:|creation_time:|VO_XV|^New_Face|Unsupported|Please supply|^subtitle font:|Starting playback|^Opening |^libavcodec version|^Load subtitles" hide 

append "" restorextitle normscreen
}


